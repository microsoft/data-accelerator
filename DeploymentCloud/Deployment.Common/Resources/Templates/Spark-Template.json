{
	"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"default_resource_location": {
			"type": "string"
		},
		"sparkClusterName": {
			"type": "string",
			"metadata": {
				"description": "The name of the HDInsight cluster to create."
			}
		},
		"sparkClusterLoginUserName": {
			"type": "string",
			"metadata": {
				"description": "These credentials can be used to submit jobs to the cluster and to log into cluster dashboards."
			}
		},
		"sparkClusterLoginPassword": {
			"type": "securestring",
			"metadata": {
				"description": "The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."			
			}
		},
		"sqlServerLoginPassword": {
			"type": "securestring",
			"metadata": {
				"description": "SQL server password. Password cannot contain semicolon or equals special characters."			
			}
		},
		"sparkClusterVersion": {
			"type": "string",
			"metadata": {
				"description": "HDInsight cluster version."
			}
		},
		"sparkComponentVersion": {
			"type": "string",
			"metadata": {
				"description": "HDInsight cluster spark component version."
			}
		},
		"sparkClusterWorkerNodeCount": {
			"type": "int",
			"metadata": {
				"description": "The number of nodes in the HDInsight cluster."
			}
		},
		"sparkClusterKind": {
			"type": "string",
			"metadata": {
				"description": "The type of the HDInsight cluster to create."
			}
		},
		"sparkSshUserName": {
			"type": "string",
			"metadata": {
				"description": "These credentials can be used to remotely access the cluster."
			}
		},
		"sparkSshPassword": {
			"type": "securestring",
			"metadata": {
				"description": "The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
			}
		},
		"storageAccounts_spark_name": {
			"type": "String"
		},
		"sparkManagedIdentity": {	
			"type": "string"	
		},
		"minInstanceCountSparkHeadnode": {
			"type": "int"
		},
		"targetInstanceCountSparkHeadnode": {
			"type": "int"
		},
		"targetInstanceCountSparkWorkernode": {
			"type": "int"
		},
		"vmSizeSparkHeadnode": {
			"type": "string"
		},
		"vmSizeSparkWorkernode": {
			"type": "string"
		},
		"userAssignedIdentitiesName": {
			"type": "string"
		},
		"virtualNetworkName": {
			"type": "string"
		},
		"subnet0Name": {
			"type": "string"
		}
	},
	"variables": {
		"storageAccountsURI": "[concat(parameters('storageAccounts_spark_name'),'.blob.core.windows.net')]",
		"storageAccountsResourceID": "[resourceId('Microsoft.Storage/storageAccounts',parameters('storageAccounts_spark_name'))]",
		"userAssignedIdentitiesResourceID": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities',parameters('userAssignedIdentitiesName'))]",
		"vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
		"subnet0Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet0Name'))]",
		"sqlservername": "[concat(parameters('sparkClusterName'), 'dataxsql')]",
		"sqldbname": "[concat('metastoredb')]"
	},
	"resources": [	
		{	
			"apiVersion": "2015-08-31-preview",	
			"name": "[parameters('sparkManagedIdentity')]",	
			"location": "[parameters('default_resource_location')]",	
			"type": "Microsoft.ManagedIdentity/userAssignedIdentities",	
			"properties": {}	
		},
		{
			"type": "Microsoft.Sql/servers",
			"apiVersion": "2020-02-02-preview",
			"name": "[variables('sqlservername')]",
			"location": "[parameters('default_resource_location')]",
			"properties": {
				"administratorLogin": "[parameters('sparkClusterLoginUserName')]",
				"administratorLoginPassword": "[parameters('sqlServerLoginPassword')]"
			},
			"resources": [
				{
					"name": "AllowAllWindowsAzureIps",
					"type": "firewallrules",
					"location": "[parameters('default_resource_location')]",
					"apiVersion": "2020-08-01-preview",
					"dependsOn": [
						"[resourceId('Microsoft.Sql/servers', variables('sqlservername'))]"
					],
					"properties": {
						"startIpAddress": "0.0.0.0",
						"endIpAddress": "0.0.0.0"
					}
				},
				{
					"type": "databases",
					"apiVersion": "2020-08-01-preview",
					"name": "[variables('sqldbname')]",
					"location": "[parameters('default_resource_location')]",
					"properties": {
						"collation": "SQL_Latin1_General_CP1_CI_AS",
						"zoneRedundant": false,
						"readScale": "Disabled",
						"readReplicaCount": 0
					},
					"sku": {
						"name": "S2",
						"tier": "Standard"
					},
					"dependsOn": [
						"[resourceId('Microsoft.Sql/servers', variables('sqlservername'))]"
					]
				}
			]
		},
		{
			"apiVersion": "2018-06-01-preview",
			"name": "[parameters('sparkClusterName')]",
			"type": "Microsoft.HDInsight/clusters",
			"location": "[parameters('default_resource_location')]",
			"dependsOn": [
				"[variables('userAssignedIdentitiesResourceID')]",
				"[variables('sqldbname')]"
			],
			"properties": {
				"clusterVersion": "[parameters('sparkClusterVersion')]",
				"osType": "Linux",
				"tier": "standard",
				"clusterDefinition": {
					"kind": "[parameters('sparkClusterKind')]",
					"componentVersion": {
						"Spark": "[parameters('sparkComponentVersion')]"
					},
					"configurations": {
						"gateway": {
							"restAuthCredential.isEnabled": true,
							"restAuthCredential.username": "[parameters('sparkClusterLoginUserName')]",
							"restAuthCredential.password": "[parameters('sparkClusterLoginPassword')]"
						},
						"ambari-conf": {
							"database-server": "[reference(resourceId('Microsoft.Sql/servers',concat(parameters('sparkClusterName'), 'dataxsql')), '2020-02-02-preview').fullyQualifiedDomainName]",
							"database-name": "metastoredb",
							"database-user-name": "[parameters('sparkClusterLoginUserName')]",
							"database-user-password": "[parameters('sqlServerLoginPassword')]"
						}
					}
				},
				"storageProfile": {
					"storageaccounts": [
						{
							"name": "[variables('storageAccountsURI')]",
							"isDefault": true,
							"container": "defaultdx",
							"key": "[listKeys(variables('storageAccountsResourceID'), '2015-05-01-preview').key1]"
						}
					]
				},
				"minSupportedTlsVersion": "1.2",
				"computeProfile": {
					"roles": [
						{
							"autoscale": null,
							"name": "headnode",
							"minInstanceCount": "[parameters('minInstanceCountSparkHeadnode')]",
							"targetInstanceCount": "[parameters('targetInstanceCountSparkHeadnode')]",
							"hardwareProfile": {
								"vmSize": "[parameters('vmSizeSparkHeadnode')]"
							},
							"osProfile": {
								"linuxOperatingSystemProfile": {
									"username": "[parameters('sparkSshUserName')]",
									"password": "[parameters('sparkSshPassword')]"
								}
							},
							"virtualNetworkProfile": {
                                "id": "[variables('vnetID')]",
                                "subnet": "[variables('subnet0Ref')]"
                            },
							"scriptActions": []
						},
						{
							"autoscale": null,
							"name": "workernode",
							"targetInstanceCount": "[parameters('targetInstanceCountSparkWorkernode')]",
							"hardwareProfile": {
								"vmSize": "[parameters('vmSizeSparkWorkernode')]"
							},
							"osProfile": {
								"linuxOperatingSystemProfile": {
									"username": "[parameters('sparkSshUserName')]",
									"password": "[parameters('sparkSshPassword')]"
								}
							},
							"virtualNetworkProfile": {
                                "id": "[variables('vnetID')]",
                                "subnet": "[variables('subnet0Ref')]"
                            },
							"scriptActions": []
						},
            {
              "name": "zookeepernode",
              "targetInstanceCount": 3,
              "hardwareProfile": {
                  "vmSize": "Standard_A8_V2"
              },
              "osProfile": {
                  "linuxOperatingSystemProfile": {
									"username": "[parameters('sparkSshUserName')]",
									"password": "[parameters('sparkSshPassword')]"
                }
              },
              "virtualNetworkProfile": {
                                "id": "[variables('vnetID')]",
                                "subnet": "[variables('subnet0Ref')]"
              }
             }
					]
				}
			},
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
					"[variables('userAssignedIdentitiesResourceID')]": {}
                }
            }
		}
	]
}